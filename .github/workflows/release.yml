# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Release

on:
  push:
    tags:
    - '*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup output folders
      run: mkdir out

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Execute minify
      run: GOOS=linux GOARCH=amd64 go run -v ./build-tools/minify.go

    - name: Build Linux Server
      run: GOOS=linux GOARCH=amd64 go build -v -ldflags="-s -w" -o ./out/DiscordEmbedServer ./
    
    - name: Build Windows Server
      run: GOOS=windows GOARCH=amd64 go build -v -ldflags="-s -w" -o ./out/DiscordEmbedServer.exe ./
    
    - name: Build FreeBSD Server
      run: GOOS=freebsd GOARCH=amd64 go build -v -ldflags="-s -w" -o ./out/FreeBSDDiscordEmbedServer ./
    
    - name: Test
      run: go test -v ./...

    - uses: ncipollo/release-action@v1
      with:
        name: Version ${{ github.ref_name }}
        artifactErrorsFailBuild: true
        artifacts: './out/DiscordEmbedServer,./out/FreeBSDDiscordEmbedServer,./out/DiscordEmbedServer.exe'
        generateReleaseNotes: true
