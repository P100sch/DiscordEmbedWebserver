# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go deploy

on:
  push:
    branches: [ "deploy" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup output folders
      run: mkdir out && mkdir out/windows && mkdir out/freebsd

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    - name: Execute minify
      run: GOOS=linux GOARCH=amd64 go run -v ./minify
    - name: Build Linux Server
      run: GOOS=linux GOARCH=amd64 go build -v -ldflags="-s -w" -o ./out/DiscordEmbedServer ./
    
    - name: Build Windows Server
      run: GOOS=windows GOARCH=amd64 go build -v -ldflags="-s -w" -o ./out/windows/DiscordEmbedServer ./
    
    - name: Build FreeBSD Server
      run: GOOS=freebsd GOARCH=amd64 go build -v -ldflags="-s -w" -o ./out/freebsd/DiscordEmbedServer ./
    
    - name: Test
      run: go test -v ./...

    - uses: actions/upload-artifact@v4
      with:
        name: DiscordEmbedServer
        path: ./out/DiscordEmbedServer
    - uses: actions/upload-artifact@v4
      with:
        name: WinDiscordEmbedServer
        path: ./out/windows/DiscordEmbedServer    
    - uses: actions/upload-artifact@v4
      with:
        name: FreeDiscordEmbedServer
        path: ./out/freebsd/DiscordEmbedServer
        
      
